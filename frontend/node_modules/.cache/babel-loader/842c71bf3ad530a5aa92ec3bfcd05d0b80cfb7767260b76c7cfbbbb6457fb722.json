{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\InvertedIndexSearch\\\\frontend\\\\src\\\\Pages\\\\shop\\\\productGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductGrid = ({\n  results,\n  buyProduct,\n  addToCart,\n  user\n}) => {\n  _s();\n  const [productName, setproductName] = useState(\"\");\n  const cartbuttoneManage = () => {\n    if (user._id) {\n      const product = user.Cart.find(product => product.Product == productName);\n      if (product) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-grid\",\n      children: results.length > 0 ? results.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: \"product\",\n          className: \"images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", product.price, \" \\u20B9\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cartAndBuy\",\n          style: {\n            display: \"flex\",\n            gap: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buyButton\",\n            onClick: () => buyProduct(product),\n            children: \"Buy Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cartButton\",\n            onClick: () => addToCart(product),\n            style: {\n              display: `${cartbuttoneManage ? \"none\" : \"block\"}`\n            },\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this) && setproductName(product.name)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: \"No products found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductGrid, \"uhQ9vz2MY7g/47GzIX/V73AXNmw=\");\n_c = ProductGrid;\nexport default ProductGrid;\nvar _c;\n$RefreshReg$(_c, \"ProductGrid\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ProductGrid","results","buyProduct","addToCart","user","_s","productName","setproductName","cartbuttoneManage","_id","product","Cart","find","Product","Fragment","children","className","length","map","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","price","description","style","display","gap","onClick","id","_c","$RefreshReg$"],"sources":["D:/Projects/InvertedIndexSearch/frontend/src/Pages/shop/productGrid.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ProductGrid = ({ results, buyProduct, addToCart,user }) => {\r\n    const [productName,setproductName] = useState(\"\");\r\n    const cartbuttoneManage  = ()=>{\r\n        if(user._id){\r\n            const product = user.Cart.find((product)=>product.Product==productName)\r\n            if(product){\r\n                return true;\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"results-grid\">\r\n        {results.length > 0 ? (\r\n          results.map((product) => (\r\n            <div key={product.id} className=\"result-item\">\r\n              <img src={product.image} alt=\"product\" className=\"images\" />\r\n              <h3>{product.name}</h3>\r\n              <p>Price: {product.price} â‚¹</p>\r\n              <p>{product.description}</p>\r\n              <div className=\"cartAndBuy\" style={{ display: \"flex\", gap: \"10px\" }}>\r\n                <button className=\"buyButton\" onClick={() => buyProduct(product)}>Buy Now</button>\r\n                <button className=\"cartButton\" onClick={() => addToCart(product)} style={{display:`${cartbuttoneManage ? \"none\" : \"block\"}`}}>Add to Cart</button>\r\n              </div>\r\n            </div> && setproductName(product.name)\r\n          ))\r\n        ) : (\r\n          <div className=\"no-results\">No products found</div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}